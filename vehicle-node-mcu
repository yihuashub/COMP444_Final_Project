#include <ESP8266WiFi.h>

#include <WiFiClient.h>
#include <ESP8266HTTPClient.h>

#include <ESP8266WebServer.h>

const char * host = "WiFi_Robot4_NodeMCU";
const char * ssid = "WiFi_Robot4";

ESP8266WebServer server(80);
int command; //Int to store app command state.
String incoming = "";   // for incoming serial string data


int spilt = 0;
String message = "";
String fire = "";
String humidity = "";
String temperature = "";
String temp = "";


void setup() {
  Serial.begin(115200);

  // Connecting WiFi

  WiFi.mode(WIFI_AP);
  WiFi.softAP(ssid);
  // Starting WEB-server

  server.on("/", HTTP_handleRoot);
  server.onNotFound(HTTP_handleRoot);
  server.begin();

}

void loop() {
  server.handleClient();
  delay(50);
  if (Serial.available() > 0) {
    incoming = Serial.readString();
    delay(50);
    
    if(incoming.substring(0, 5).compareTo("FIRE!") == 0){

      spilt = 0;
      message = "";
      fire = "";
      humidity = "";
      temperature = "";
      temp = "";
      
      //Serial.println(incoming); 
      for(int i = 0; i<incoming.length();i++){
        if(incoming.charAt(i) == ','){
           if(spilt == 0){
            message = temp;
            temp = "";
            spilt++;
           }
           else if(spilt == 1){
            fire = temp;
            temp = "";
            spilt++;
           }
           else if(spilt == 2){
            humidity = temp;
            temp = "";
            spilt++;
           }
           else if(spilt == 3){
            temperature = temp;
            temp = "";
            spilt=0;
           }
        }else{
          temp += incoming.charAt(i);
        }
      }
      sendFireAlert();
    }
  }
}

void HTTP_handleRoot(void) {

  if (server.hasArg("State")) {
    Serial.println(server.arg("State"));
  }
  server.send(200, "text/html", "");
}

void sendFireAlert() {


    HTTPClient http; //Declare an object of class HTTPClient

    http.begin("http://192.168.4.2/?message="+message+"&fire="+fire+"&humidity="+humidity+"&temperature="+temperature); // request destination
    int httpCode = http.GET(); //Send the request

    if (httpCode > 0) { //Check the returning code
      String payload = http.getString(); //Get the request response payload
      Serial.print("Alert SENT"); //Print the response payload
    }
    http.end(); //Close connection
  
}
